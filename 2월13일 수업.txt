char를 사칙연산 하면=int
문자열과 데이터타입을 더하면 문자열로 바뀜
단항연산자 중의 ++  왼쪽으로 진행
++i 1을 증가시키고 대입
i++ 대입시킨다음 증가

실수형 타입은 정수형 타입보다 범위가 넓음
long는 꼭 long임을 밝혀야 함
오버플로우가 생기는 기준
기본형이 int 이기 때문에
--강제형변환시 데이터손실 ->반올림이 아닌 버림이 됨

num=scan.next();// 123 엔터키를 치면 번호를 입력(엔터키 이전까지만 인식)
nextint,next가 들어가고 nextline이 들어갈때만 발생
web에서는 이런일이 발생하지 않음
scan.nextLine();
System.out.println("이름을 입력하세요.>>");
name=scan.nextLine();//엔터키도 문자로 인식함

배열은 같은 종류만 묶을수 있지만
객체는 다른종류도 한번에 묶을수 있다.

가변배열 - 거의 안씀
배열의 복사
System.arraycopy를 이용
System.arraycopy(arr1,0,arr2,0,arr1.length)
배열1의 어디지점에서 복사시작 하는지 배열2의 어느부분을 시작점으로 복사하는지
배열1의 몇개나 복사할건지
args 배열임 (스트링의)

등수 계산 방법
//등수계산 합계로비교
for(int i=0;i<score.length;i++) {
rank_count=1;
for(int j=0;j<score.length;j++) {
if(score[i][score[i].length-1]<score[j][score[i].length-1]) {  //200 190 180
rank_count++;
	}
	}
rank[i]=rank_count;//등수입력
}
->합계부분은 고정하고 열부분을 비교하면서 비교대상보다 작으면 등수를 증가시킨다.
프로그램 개발과정
출력해줘야 되는 부분을 성립한다.
핵심적인 부분을 틀을 잡고 추가시켜나간다.
따로따로 입력받아도 됨(나중에 비슷한 부분을 합치면 됨)

