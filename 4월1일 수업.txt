진행상황-> 닉네임 중복안뜨는거 해결해야함,비밀번호 검증확인

전체적으로 유효성검사 확인

쿠킷-> 자바스크립트 적용하기

oracle db다운받아야됨

-----------------------------웹어플리케이션-----------------------------------

http->프로토콜
ip<-dns     ->문자열로 들어온 주소를 ip 로
pop->다른곳에서 메일을 가져올때씀

동적ip 고정ip
동적아이피는 빈 아이피를 배당할수 있다.

ip->컴퓨터한대에 한개가 배당됨(유일함)

포트번호->구동되고 있는 프로그램에 대한 번호(고유함)
80->웹브라우저(안붙여도됨 : 기본설정되있음 http도 안붙여도됨)
포트번호는 마음대로 붙일수 있음


자바스크립트->클라이언트쪽의 동적처리를 담당

이크립스me->모바일 웹페이지를 위한 프레임웍

톰캣-> 컨테이너(기능이 제한적이다. 웹어플리케이션 서버가 아님)
컨테이너안에 jsp나 servlet(각각의 종류가 있음) 이 웹 컨테이너로 들어감

jsp=>html에 자바언어를 쓸수있는 형식이다.

웹서버->일시적인 부하를 완화시켜줌(정적파일과 동적파일분류,불법접근자차단 
->웹어플리케이션서버 로 정보전달)

웹어플리케이션서버(WAS)-> 동적파일 처리담당, 거의 모든 기능을 처리
웹서버와 컨테이너의 기능을 다한다. 트랜젝션(연산),보안,db접근,트래픽관리..

request->브라우저에서 서버에 요청(객체)
response-> 서버에서 브라우저에 응답(객체)



mvc패턴->모델,뷰,컨트롤러

jsp->뷰->컨트롤러의 응답을 받아 브라우저에 응답

servlet->컨트롤러(자바프로그램)->브라우저의 요청을 받음

컨트롤러가 모델에 요청->응답받은 내용 처리-> jsp에 응답

jsp와 servlet의 관계->jsp는 servlet로 변환되어 실행됨


---------------------------------서블릿---------------------------------------

서블릿은 패키지를 지정해야함 ->http서블릿을 자동으로 상속받게 되있음

유알엘 맵핑-> 단축주소 지정(파일생성시 지정할수도 있다)

@WebServlet->어노테이션->단축이름지정가능->
다른방법(어노테이션을 사용할수 없는 경우)
( web.xml 에 
  <servlet>
  	<servlet-name>Form_ok</servlet-name>
  	<servlet-class>com.javalec.ex.Form_ok</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>Form_ok</servlet-name>
  	<url-pattern>/FO</url-pattern>
  </servlet-mapping>
이렇게 추가하는 방법도있다.)

index.html->처음접속하면 보이는 페이지

jsp_0401_01->서블릿 화면출력 예제

doget 으로 들어왔을때랑 dopost로 들어왔을때랑 다른화면을 보여줄수 있다.


get,post방식으로 한글이 들어왔을때 깨지지않게하기위해
->
request.setCharacterEncoding("utf-8"); 추가 ->파일마다 적어줘야 함
(폼을 받을때 변환)


->
server.xml(server카테고리에 있음)
URIEncoding="utf-8"
추가

response.setContentType("text/html; charset=utf-8");
->현재의 페이지에서 한글이 깨지지않게 하기위해 사용


request.getParameter(name)-> form에 입력된 값을 불러옴

<%등호(=)가있을때는 ;안붙여도됨

html파일을 jsp파일로 변환

회원가입 페이지 유효성 검사->jsp or servlet -> 정보확인-> 최종컨펌 -> db저장






프로젝트이름-> 컨택스트 패스-> url에 들어가있음

--생명주기--

선처리->@PostConstruct

init()-> 구동되자마자 한번 실행(전역변수나 전역메소드등을 선언해야 할때)

doget,dopost->호출시마다 실행

destroy->서버점검,서버종료시 마지막으로 한번 실행

후처리->@PreDestroy

=>특별한 상황에 씀

-- 폼값받기--

getParameter->일반값
getParameterValues->체크박스를 받을때(복수선택이 가능하기때문에)

들어오는값은 다 문자열임

arrays.toString->배열의 데이터를 다찍어주는 형태


