오라클 가입하기
자바의 정석 인터넷강의

변수
기본형 boolean-판단, char-문자, byte, short, int,long-정수, float,double-실수
참조형 string-문자열 등..

기본형 변수
논리형
참과 거짓중 하나를 값으로 가짐,조건식과 논리적 계산에 이용
<true> <false> = <"0"> <"1">
문자형
문자를 저장하는데 사용, 변수당 하나의 문자만 저장
정수형-int,long를 주로사용
실수형-float, duble

boolean(1byte)-논리
char(2byte)-문자
byte(1byte)-
short(2byte)-정수
int(4byte)-20억 정도까지 표현가능
long(8byte)-
float(4byte)-실수
double(8byte)-
8bit=1byte

변수의 선언
타입-변수명
int score;
score=100;
-> int score=100;(같다라는 표현은 ==임)
String srt=new String("abc");
->String srt="abc"로 해도됨(기본형이 아니지만)
str=null;
명명규칙
1. 대소문자 구분있음 길이 제한 없음-True와 true는 서로 다름
2. 예약어(reserved word) 사용금지- int int=100;은 안됨
3. 숫자로 시작금지-top10은 되지만 7up은 안됨
4. 특수문자는 _와 $만 허용 (보통 _만 사용)
권장사항
1. 클래스 이름의 첫글자는 항상 대문자로 한다. (메소드의 첫문자는 소문자만 가능, 변수는 대소문자 모두가능)
2. 여러 단어 이름은 단어의 첫 글자를 대문자로 한다.
-예: lastIndexOf, StringBuffer
3.상수(변할수 없는수)의 이름은 대문자로 한다. 단어는 '_'로 구분한다. 
-예: PI, MAX_NUMBER
----------------------------------------------------------------------
변수,상수, 리터럴
변수-하나의 값을 저장하기 위한 공간
상수-한번만 값을 저장할수 있는 공간 (final int MAX=100;) 
리터럴-그 자체로 값을 의미(데이터값)
패키지->클래스->변수,메소드등(메소드내에는 변수,객체가 들어갈수 있다.메소드에는 메소드가 들어갈수 없다.)
public 누구나 접근가능 private한정된 사용자만
main 메소드- 제일 먼저 시작되는 메소드 (한 클래스에만 존재가능)
static-제일먼저 실행하라는 명령
void-돌려줄 값이 없는 경우
ctrl +F11->실행 단축키
----------------------------------------------------------------------
리터럴과 접미사
e3->10의3승이라는 말
지수로 표시하는것은 float과 double밖에 없다.
double의 d는 생략가능(float는 꼭 뒤에 f를 붙인다.)
long도 뒤에 l을 붙여야함.
---------------------------------------------------------------------
변수의 기본값과 초기화
 
클래스에서의 변수는 지정안해도 무방함, 메소드에서의 변수는 기본값을 선언해야함.
*없다와 null은 다른의미(null은 데이터가 없는 상태)
선언안하면 알아서 디폴트값을 넣어줌 (boolean은 false,숫자는 0)
---------------------------------------------------------------------
char은 문자한개만 넣어야됨 , 두개넣으면 에러
string는 편하지만 용량을 많이차지(메모리)
''는 문자를 표현할때,""는 문자열을 표현할때
데이터형태 다른거에 숫자 넣으면 더큰 형태로 자동변환(뒤에 있을경우)
앞에 있으면 먼저 계산
---------------------------------------------------------------------
정수의 오버플로우
수용가능한 수를 벗어난 경우 처음숫자로 되돌아옴
정수와 실수가 대등한 위치일 경우 실수가 더큼
곱하기시 오버플로우가 많이 발생함
---------------------------------------------------------------------
형변환
boolean을 제외하고 서로 형변환 가능하다.
큰것에 작은것을 넣을 때는 형변환지정 필요없음.
작은것에 큰것을 넣을 때는 형변환지정 필요함. 안하면 에러남
숫자->문자, 문자->숫자 : 아스키코드로 변환
--------------------------------------------------------------------
연산자<-->피연산자
사칙연산 등..
종류
단항                >                  이항                   >              삼항        >              대입

(+)(-)                         산술     비교    논리                       :  ?  :                        =
                                +,-      



==는 같다, !=는 다르다("!"는 논리부정 연산자 피연산자가 boolean일때 사용가능하다.)

증감연산자     ++i   -> 증가시키고 대입해준다,     i++ ->대입한다음 증가시킨다.

문자형 숫자를  정수형 숫자로 바꾸고 싶을경우 '0'을 빼준다.


math.round() ->소수점 첫째자리에서 반올림 해주는 메소드

